@page "/pokemon/{PokemonId}"
@using BlazorDex.Models
@using Util
@inject PokeClient client

<style>
    .pokemon-name {
        text-transform: capitalize;
    }

    img {
        width: 45px;
    }

    .badge{
        text-transform: capitalize;
    }

    .container {
        margin: 30px auto;
        width: 28%;
    }

    .inner-container {
        margin: 0 auto;
        width: 100%;
        text-align: center;
        padding:20px;
        padding-top: 0px;
    }

    .card-top {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin-bottom: 10px;
        border-radius: 15px;
    }

    .card {
        box-shadow: 0 20px 30px rgba(0,0,0,0.3);
        border-radius: 15px;
    }

    .pokemon-info {
        display: flex;
        justify-content: space-around;
        align-items: center;
        margin-bottom: 10px
    }

    .type-badge {
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
        border-radius: 8px;
        font-size: 13px;
        color: white;
        text-transform: uppercase;
        margin-right: 3px;
    }

    .stat {
        text-transform: capitalize;
    }

    .stat-bar {
        display: flex;
        flex-direction: column;
        text-align: left;
        margin-bottom: 5px;
    }

    .poke-icon {
        width: 50px;
        height: 50px;
        margin-right: 10px;
    }

    .icon-container {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .card-img-top {
        height: 300x;
        width: 250px;
    }

</style>

<div class="container">
    <div class="card">
        @if (@pokemon.types.Count > 0)
        {
        <div class="card-top" style="background-color: @PokeColor.GetTypeColor(pokemon.types[0].type.name)">
            <img src="@pokemon.sprites.front_default" alt="pokemon sprite" class="card-img-top" />
        </div>
        }
        <div class="inner-container">
            <div class="stats-head">
                <div class="icon-container">
                    <img src="/img/@PokeUtill.GetRandomBall()" alt="" class="poke-icon"/>
                    <h1 class="pokemon-name">@pokemon.name</h1>
                </div>
                <div class="pokemon-info">
                    <h5>Height: @PokeUtill.GetPokemonHeightInMeters(pokemon.height) m</h5>
                    <div>
                        @foreach (var type in pokemon.types)
                        {
                            <span class="type-badge" style="background-color: @PokeColor.GetTypeColor(type.type.name)">@type.type.name</span>
                        }
                    </div>
                    <h5>Weight: @PokeUtill.GetPokemonWeightInKilograms(pokemon.weight) kg</h5>
                </div>
            </div>
            <div class="stats-head">
                <div class="icon-container">
                    <img src="/img/icons8-pokeball-48.png" alt="start ball icon" />
                    <h2>Stats</h2>
                </div>
                @foreach (var stat in pokemon.stats)
                {
                    <div class="stat-bar">
                        <h5 class="stat">@stat.stat.name: @stat.base_stat</h5>
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped" role="progressbar" style="width: @stat.base_stat%;
                            background-color: @PokeColor.GetStatColor(stat.stat.name)" aria-valuenow="100" aria-valuemin="0"
                            aria-valuemax="200">
                        
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]

    public string PokemonId { get; set; }

    Pokemons pokemon = new Pokemons();

    protected override async Task OnInitializedAsync()
    {
        pokemon = await client.GetPokemons(PokemonId);
    }
}